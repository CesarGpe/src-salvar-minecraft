import mc2:events as module
import mc2:items/spidercap as module
import mc2:items/tinker_goggles as module
import mc2:items/recovery_compass as module

# Storage should all be contained in the same compound for easy resets.
# "mc2:storage data" will be this compound, so we can delete storage with:
# data remove storage mc2:storage data

function mc2:load:
	# THIS FUNCTION IS MODIFIED IN setup.py AND finish.py !!!!!
	raw # Runs on reload, or just before loading the world
	execute summon minecraft:marker:
		execute store result storage mc2:storage data.world_spawn.x int 1 run data get entity @s Pos[0]
		execute store result storage mc2:storage data.world_spawn.y int 1 run data get entity @s Pos[1]
		execute store result storage mc2:storage data.world_spawn.z int 1 run data get entity @s Pos[2]
		kill @s

function mc2:tick:
	# THIS FUNCTION IS MODIFIED IN finish.py !!!!!
	raw # Runs every game tick
	raw # 1 irl second = 20 game ticks
	execute as @a at @s run function mc2:player_tick

function mc2:player_tick:
	execute if entity @s[tag=mc2.wearing_spidercap] unless predicate mc2:wearing_spidercap:
		effect clear @s minecraft:night_vision
		tag @s remove mc2.wearing_spidercap

function mc2:sch/20t:
	#item replace entity @e[type=minecraft:drowned,nbt={equipment:{mainhand:{id:"minecraft:trident"}}}] weapon.mainhand with iron_sword 1
	execute as @e[type=minecraft:drowned,tag=!mc2.drowned.checked,tag=!smithed.entity,tag=!smithed.strict]:
		execute if items entity @s weapon.mainhand minecraft:trident run item replace entity @s weapon.mainhand with minecraft:iron_sword
		tag @s add mc2.drowned.checked

	execute as @e[type=minecraft:armadillo,tag=!smithed.entity,tag=!smithed.strict] at @s:
		execute if entity @s[tag=!mc2.armadillo.scared] if entity @a[distance=..6]:
			data modify entity @s Brain.memories."minecraft:danger_detected_recently" set value {value:true}
			tag @s add mc2.armadillo.scared
		execute if entity @s[tag=mc2.armadillo.scared]:
			execute if entity @a[distance=..6] run return run data modify entity @s Brain.memories."minecraft:danger_detected_recently" set value {value:true}
			data modify entity @s Brain.memories."minecraft:danger_detected_recently" set value {value:false,ttl:60}
			tag @s remove mc2.armadillo.scared
		execute if data entity @s {state:scared} run return run data modify entity @s Invulnerable set value true
		data modify entity @s Invulnerable set value false
	# Loop
	schedule function mc2:sch/20t 20t replace

append function_tag minecraft:load {
    "values": [
        "mc2:load",
    ]
}

append function_tag minecraft:tick {
    "values": [
        "mc2:tick",
    ]
}
