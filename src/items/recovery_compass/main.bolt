from mc2:utils import damageItem

MATH = "mc2.recovery_compass.math"
CAN_TP = "mc2.recovery_compass.can_tp"
COOLDOWN = "mc2.recovery_compass.cooldown"
TIMER = "mc2.recovery_compass.timer"
USE = "mc2.recovery_compass.use"
RANGE = "1..100"

function ./check_dimension_macro:
	# i cant use CAN_TP here because of macros
	$execute if dimension $(dimension) run return run scoreboard players set @s mc2.recovery_compass.can_tp 1
	scoreboard players set @s CAN_TP 0

# Effects to show the teleport is not possible
function ./cant_tp:
	effect give @s minecraft:blindness 1 0 true
	playsound minecraft:entity.allay.hurt player @a ~ ~ ~ 0.4 0 0
	playsound minecraft:entity.warden.attack_impact player @a ~ ~ ~ 0.5 0 0
	playsound minecraft:block.trial_spawner.detect_player player @a ~ ~ ~ 0.5 0.5 0
	execute anchored eyes run particle minecraft:sculk_soul ^ ^ ^0.2 0.1 0.1 0.1 0.06 20
	execute anchored eyes run particle minecraft:smoke ^ ^ ^0.2 0.25 0.1 0.25 0 6

# Effects for each "pulse" of the teleport process
function ./dong:
	effect give @s minecraft:nausea 5 0 true
	effect give @s minecraft:darkness 2 0 true
	playsound minecraft:entity.warden.heartbeat player @a ~ ~ ~ 1 0 0
	playsound minecraft:block.sculk_catalyst.place player @a ~ ~ ~ 1 0 0
	playsound minecraft:block.sculk_catalyst.break player @a ~ ~ ~ 1 0 0
	particle minecraft:trial_spawner_detection_ominous ~ ~0.5 ~ 0.35 0.5 0.35 0.01 60

# Manage the right click detection cooldown
function ./cd:
	scoreboard players remove @s USE 1
	execute if score @s USE matches 1.. run return run advancement revoke @s only ./cd
	scoreboard players reset @s USE

	# Teleport was cancelled
	execute if score @s TIMER matches RANGE:
		playsound minecraft:block.bell.use player @a ~ ~ ~ 1 0 0
		playsound minecraft:entity.warden.death player @a ~ ~ ~ 1 0 0
		stopsound @s player minecraft:block.trial_spawner.about_to_spawn_item
		particle minecraft:sculk_charge{roll:0} ~ ~0.2 ~ 0.5 0 0.5 0 35
		particle minecraft:sculk_charge_pop ~ ~1.2 ~ 0.35 0.5 0.35 0.05 50
		particle minecraft:sculk_soul ~ ~1.25 ~ 0.1 0.1 0.1 0.08 10
		function ./end_tp
	scoreboard players reset @s TIMER

# Main chunk of code
function ./use:
	execute unless score @s USE matches 1..:
		scoreboard players set @s CAN_TP 1

		# Not in the correct dimension
		execute if data entity @s respawn.dimension run function ./check_dimension_macro with entity @s respawn
		execute unless data entity @s respawn.dimension:
			execute unless dimension minecraft:overworld run scoreboard players set @s CAN_TP 0

		# Not enough durability
		execute if items entity @s weapon.mainhand *[minecraft:custom_data~{mc2.recovery_compass:true}]:
			execute store result score .durCheck CAN_TP run data get entity @s SelectedItem.components."minecraft:damage"
		execute if items entity @s weapon.offhand *[minecraft:custom_data~{mc2.recovery_compass:true}]:
			execute store result score .durCheck CAN_TP run data get entity @s equipment.offhand.components."minecraft:damage"
		execute if score .durCheck CAN_TP matches 801.. run scoreboard players set @s[predicate=mc2:in_survival] CAN_TP 0

		# On cooldown
		execute if score @s COOLDOWN matches 1.. scoreboard players set @s CAN_TP 0

		# If any of the above is true
		execute if score @s CAN_TP matches 0 run function ./cant_tp

	execute unless score @s COOLDOWN matches 1.. unless score @s CAN_TP matches 0:
		execute unless score @s USE matches 1.. run scoreboard players reset @s TIMER
			
		# Runs once at the start of this event
		execute if score @s TIMER matches 1:
			attribute @s minecraft:jump_strength modifier add mc2:recovery_compass -1 add_value
			attribute @s minecraft:movement_speed modifier add mc2:recovery_compass -1 add_value
			playsound minecraft:block.trial_spawner.about_to_spawn_item player @a ~ ~ ~ 1 0.5 0
			playsound minecraft:entity.warden.emerge player @a ~ ~ ~ 0.35 1.5 0

		# Show particles through all the event
		execute if score @s TIMER matches RANGE run particle minecraft:sculk_soul ~ ~1.5 ~ 0.8 0.5 0.8 0.02 1

		# tictoc
		execute if score @s TIMER matches 10:
			function ./dong
		execute if score @s TIMER matches 40:
			function ./dong
		execute if score @s TIMER matches 70:
			function ./dong

		# Beam the player up
		execute if score @s TIMER matches 99:
			execute anchored eyes run particle minecraft:sonic_boom ^ ^ ^0.2 0 0 0 0 1
			execute if data entity @s respawn run return:
				execute store result storage mc2:storage data.recovery_compass.coords.x int 1 run data get entity @s respawn.pos[0]
				#execute store result storage mc2:storage data.recovery_compass.coords.y int 1 run data get entity @s respawn.pos[1]
				execute store result score @s MATH run data get entity @s respawn.pos[1]
				execute store result storage mc2:storage data.recovery_compass.coords.y int 1 run scoreboard players add @s mc2.recovery_compass.math 1
				execute store result storage mc2:storage data.recovery_compass.coords.z int 1 run data get entity @s respawn.pos[2]
				function mc2:technical/tp_macro with storage mc2:storage data.recovery_compass.coords
			function mc2:technical/spreadplayers_macro with storage mc2:storage data.world_spawn

		# Effects need to be separated to make sure they actually happen AFTER the teleport
		execute if score @s TIMER matches 100:
			function ./dong
			execute anchored eyes run particle minecraft:flash ^ ^ ^0.3 0 0 0 0 6 force @s
			execute anchored eyes run particle minecraft:sonic_boom ^ ^ ^0.2 0 0 0 0 1
			playsound minecraft:block.trial_spawner.spawn_item player @a ~ ~ ~ 1 0 0
			function ./end_tp

			execute if predicate mc2:in_survival:
				execute if items entity @s weapon.mainhand *[minecraft:custom_data~{mc2.recovery_compass:true}]:
					damageItem("weapon.mainhand", 200)
				execute if items entity @s weapon.offhand *[minecraft:custom_data~{mc2.recovery_compass:true}]:
					damageItem("weapon.offhand", 200)
		
		# Increment timer
		scoreboard players add @s TIMER 1

	advancement revoke @s only ./use
	advancement revoke @s only ./cd
	scoreboard players set @s USE 2

# Common effects after teleport or cancel
function ./end_tp:
	attribute @s minecraft:jump_strength modifier remove mc2:recovery_compass
	attribute @s minecraft:movement_speed modifier remove mc2:recovery_compass
	scoreboard players set @s COOLDOWN 40

# Advancement to detect the right click
advancement ./use {
	"criteria": {
		"requirement": {
			"trigger": "minecraft:using_item",
			"conditions": {
				"item": {
					"predicates": {
						"minecraft:custom_data": {
							"mc2.recovery_compass":true
						}
					}
				}
			}
		}
	},
	"rewards": {
		"function": "mc2:items/recovery_compass/use"
	}
}

# Helper advancement to make the use function not run every tick
advancement ./cd {
	"criteria": {
		"tick": {
			"trigger": "minecraft:tick"
		}
	},
	"rewards": {
		"function": "mc2:items/recovery_compass/cd"
	}
}

# Check every single slot for a compass to modify (thank you john minecraft)
#function ./replace:
#	execute if items entity @s player.cursor minecraft:recovery_compass[!minecraft:custom_data] run item modify entity @s player.cursor mc2:change_recovery_compass
#	execute if items entity @s weapon.mainhand minecraft:recovery_compass[!minecraft:custom_data] run item modify entity @s weapon.mainhand mc2:change_recovery_compass
#	execute if items entity @s weapon.offhand minecraft:recovery_compass[!minecraft:custom_data] run item modify entity @s weapon.offhand mc2:change_recovery_compass
#	for i in range(27):
#		slot = f"inventory.{i}"
#		execute if items entity @s slot minecraft:recovery_compass[!minecraft:custom_data] run item modify entity @s slot mc2:change_recovery_compass
#	for i in range(9):
#		slot = f"hotbar.{i}"
#		execute if items entity @s slot minecraft:recovery_compass[!minecraft:custom_data] run item modify entity @s slot mc2:change_recovery_compass
#	advancement revoke @s only ./replace